\
name: Python Application CD

on:
  push:
    branches:
      - main  # Or your primary deployment branch, e.g., master, release/*

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU (for multi-platform builds, optional)
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY_URL }} # e.g., ghcr.io, docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY_URL }}/${{ github.repository_owner }}/ai-grading-pipeline:latest,${{ secrets.DOCKER_REGISTRY_URL }}/${{ github.repository_owner }}/ai-grading-pipeline:${{ github.sha }}
        # github.repository_owner might need to be lowercase for some registries
        # Consider using more sophisticated tagging strategies (e.g., SemVer)

    # Add deployment steps here (e.g., kubectl apply, helm upgrade, etc.)
    # Example:
    # - name: Deploy to Kubernetes
    #   if: success()
    #   run: |
    #     echo "Setting up kubectl"
    #     # Add steps to configure kubectl with your cluster credentials (use secrets)
    #     echo "Applying Kubernetes manifests"
    #     # kubectl apply -f deployment.yaml
    #     # kubectl apply -f service.yaml
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
